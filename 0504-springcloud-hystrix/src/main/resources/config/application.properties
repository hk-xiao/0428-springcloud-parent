server.port=8084
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/es_test?useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

mybatis.type-aliases-package=com.qy108.hk.model
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

# 配置eureka注册中心的地址
# 如果需要注册进eureka中，那么eureka中的命名空间必须要存在
# 在这里之前配置的是单机版，配置单机版的情况下只知道其中一台的存在
# 因为现在eureka是集群模式，每一台节点都是平等节点，所以必须要让所有的provider知道这些节点都是什么
# 单机版
# eureka.client.service-url.defaultZone=http://localhost:7081/eureka
eureka.client.service-url.defaultZone=http://eureka01:7081/eureka,http://eureka02:7082/eureka,http://eureka03:7083/eureka
# 配置eureka中的实例id(相当于数据库中的主键)，同一个命名空间中实例id一定不能相同
# 予人玫瑰手有余香(方便于其他人)(通常情况下配置规则)-->1.该生产者所提供的功能 2.标明是生产者还是消费者 3.该生产者的端口号
eureka.instance.instance-id=book-provider-8083

# !!!!!配置在eureka中所显示Application的名称
# 因为consumer就是通过这个名称来进行调用provider(如果不配置则显示的是UNKNOWN(当消费者携带数据去eureka中寻找生产者的时候))
# 永远找不到，这个生产者就是一个废弃的
# 这个值可以重复，随便去配置(当实现负载均衡的时候这个值必须要重复)
spring.application.name=book-provider

# 配置eureka的细节
# 将来你们进入公司之后是一个团队来进行开发
# 张三--->订单(order-provider)
# 李四--->购物车(cart-provider)
# 王五--->登录系统(login-provider)
# 因为每一个服务是不同的人开发，ip地址不一样，方法名不一样(在这里一定要方便于别人)
# 当鼠标悬浮的时候，左下角会显示localhost:8081/actuator/info
# 所要修改的是，当鼠标悬浮的时候显示直接是ip地址，不再是localhost
eureka.instance.prefer-ip-address=true

# 第二个关于eureka配置的细节问题
# 点击a标签--->直接打开的是404--->咱们现在想直接让他打开就是一个HTML页面，显示比较完整的该服务的信息(作者，公司名，提供的方法，详细的描述...)
# 这些配置springcloud公司不会给你提示，根据项目的情况自定义配置
# 必须要以info开头
info.author.name=Seven
info.company.name=AAA Software Education
info.project.description=测试中文，项目描述

# 失效eureka的自我保护机制
# 规定自己向eureka发送心跳的时间
eureka.instance.lease-renewal-interval-in-seconds=5
# 规定eureka最后一次接收到心跳时间时间多少秒直接剔除
eureka.instance.lease-expiration-duration-in-seconds=8
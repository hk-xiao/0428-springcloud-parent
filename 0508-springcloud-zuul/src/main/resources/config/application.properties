server.port=5081
server.servlet.context-path=/

spring.application.name=book-zuul

# eureka.client.service-url.defaultZone=http://localhost:7081/eureka
eureka.client.service-url.defaultZone=http://eureka01:7081/eureka,http://eureka02:7082/eureka,http://eureka03:7083/eureka
# 配置eureka中的实例id(相当于数据库中的主键)，同一个命名空间中实例id一定不能相同
# 予人玫瑰手有余香(方便于其他人)(通常情况下配置规则)-->1.该生产者所提供的功能 2.标明是生产者还是消费者 3.该生产者的端口号
eureka.instance.instance-id=book-zuul-5081

# 所有的springcloud组件都必须默认使用eureka
# 如果需要实现路由的转发，就必须要知道真实服务器的地址(eureka中的地址)
# 配置具体的真实地址
# 这里的routes和service-id之间的这个配置一定是命名空间
# zuul.routes.book.service-id=book-provider
# 访问规则是路由项目的ip:端口号/eureka中真实的provider地址/@RequestMapping的值
# 目前来说转发请求的功能已经完毕了，但是非常不安全，因为这个真实的地址仍然没有替换掉，还是会暴露在地址栏中
# 配置虚拟路径来代替真实的路径，保护了真实的路径(注意:虚拟路径和真实路径的命名空间一定要一模一样)
# localhost:5081/seven/@RequestMapping的值
# zuul.routes.book.path=/seven/**
# 到公司之后看到的写法都是下面的写法
zuul.routes.book-provider.path=/hk/**
# 虽然已经把这个真实路径替换掉了，但是使用真实路径仍然可以进行访问，这么一来仍然会有安全隐患
# 可以直接把真实路径禁用掉(也就是说用户以后就不能再使用真实路径来进行寻找具体的provider了，但是consumer仍然可以)
# 因为consumer和provider一直都在同一个局域网中(路由拦截的和过滤器都是客户端的非法请求，和局域网中的所有服务器都没有任何关系)
# zuul.ignored-services=book-provider
# 这里仍然可以使用通配符*
# properties和yml的写法不一样
# 如果是properties
zuul.ignored-services=*
# 如果是yml
# zuul:
#       ignored-services: "*"

# 添加一个前缀路径，这个前缀路径可以添加也可以不加，一般情况下，前缀路径的名字都是以公司名称(缩写)命名
# localhost:5081/aaa/seven/all





















